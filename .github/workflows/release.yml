name: Android Release Build
 
on:
  workflow_dispatch:  # 仅手动触发 
    inputs:
      release_notes:
        description: 'Release notes (optional)'
        required: false 
        type: string
 
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production 
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 
 
      - name: Set up JDK 17
        uses: actions/setup-java@v4 
        with:
          distribution: 'zulu'
          java-version: '17'
 
      - name: Validate Keystore Secrets 
        run: |
          if [ -z "$KEYSTORE_BASE64" ] || [ -z "$KEYSTORE_PASSWORD" ] || [ -z "$KEY_ALIAS" ] || [ -z "$KEY_PASSWORD" ]; then
            echo "::error::Missing keystore secrets!"
            exit 1 
          fi
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
 
      - name: Decode Keystore
        run: |
          echo "$KEYSTORE_BASE64" | base64 -di > app/keystore.jks  
          # 验证keystore有效性 
          keytool -list -v \
            -keystore app/keystore.jks  \
            -storepass "$KEYSTORE_PASSWORD" \
            -alias "$KEY_ALIAS" || (echo "::error::Invalid keystore!" && exit 1)
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
 
      - name: Build Release APK
        run: |
          chmod +x ./gradlew 
          ./gradlew assembleRelease --stacktrace --no-daemon 
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
 
      - name: Rename APK 
        run: |
          mkdir -p artifacts
          for apk in app/build/outputs/apk/release/*.apk; do
            apk_name=$(basename "$apk")
            new_name="mytv-android-${apk_name#app-release-}"
            cp "$apk" "artifacts/$new_name"
          done 
 
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v$(date +%Y%m%d.%H%M)  # 自动生成日期标签 
          name: Release $(date +"%Y-%m-%d")
          body: ${{ inputs.release_notes  || 'Production release' }}
          files: |
            artifacts/*.apk
            app/build/outputs/mapping/release/mapping.txt   # 包含混淆映射文件 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
